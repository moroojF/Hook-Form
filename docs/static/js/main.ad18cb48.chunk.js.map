{"version":3,"sources":["components/PersonForm.jsx","components/PersonCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["PersonForm","props","useState","first_name","setFirstName","last_name","setLastName","email","setEmail","password","setPassword","conpassword","setConPassword","hasBeenSubmitted","setHasBeenSubmitted","errors","setErrors","nameErrors","e","value","target","message","length","name","className","onSubmit","preventDefault","user","setUser","type","onChange","onBlur","password2","conpassword2","disabled","PersonCard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad18cb48.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst PersonForm = props => {\r\n    const [first_name, setFirstName] = useState(\"\");\r\n    const [last_name, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [conpassword, setConPassword] = useState(\"\");\r\n    const [hasBeenSubmitted, setHasBeenSubmitted] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const createUser = e => {\r\n        e.preventDefault();\r\n        const user = {\r\n            first_name, last_name, email, password, conpassword\r\n        };\r\n\r\n        // set it to true to change the header fo the form\r\n        setHasBeenSubmitted(true);\r\n\r\n        // pass the user to the App\r\n        props.setUser(user);\r\n\r\n        // clean the form after creating the user\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setConPassword(\"\");\r\n    };\r\n\r\n    const formMessage = () => {\r\n        if (hasBeenSubmitted) {\r\n            return \"Thank you for submitting the form!\";\r\n        } else {\r\n            return \"Welcome, please submit the form\";\r\n        }\r\n    };\r\n\r\n    const nameErrors = e => {\r\n        let value = e.target.value;\r\n        let message = \"\";\r\n        if (!value) {\r\n            message = \"Name is required!\"\r\n        } else if (value.length < 3) {\r\n            message = \"Name must be 3 characters or longer!\"\r\n        }\r\n        setErrors({ ...errors, name: message });\r\n    }\r\n\r\n    const emailErrors = e => {\r\n        let value = e.target.value;\r\n        let message = \"\";\r\n        if (!value) {\r\n            message = \"Email is required!\"\r\n        } else if (value.length < 5) {\r\n            message = \"Email must be 5 characters or longer!\"\r\n        }\r\n        setErrors({ ...errors, email: message });\r\n    }\r\n\r\n    const passWErrors = e => {\r\n        let value = e.target.value;\r\n        let message = \"\";\r\n        if (!value) {\r\n            message = \"Password is required!\"\r\n        } else if (value.length < 8) {\r\n            message = \"Password must be 8 characters or longer!\"\r\n        }\r\n        setErrors({ ...errors, password2: message });\r\n    }\r\n\r\n    const conpassWErrors = e => {\r\n        let value = e.target.value;\r\n        let message = \"\";\r\n        if (!value) {\r\n            message = \"Please Confirm your Password!\"\r\n        } else if (value === password) {\r\n            message = \"This should be identecal to your Password!\"\r\n        }\r\n        setErrors({ ...errors, conpassword2: message });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-sm-4 mt-5\">\r\n            <h3>{formMessage()}</h3>\r\n            <form onSubmit={createUser}>\r\n                <div className=\"form-group\">\r\n                    <label>First name:</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setFirstName(e.target.value)} onBlur={nameErrors} value={first_name} />\r\n                    <p className=\"text-danger\">{errors.name}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Last name:</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setLastName(e.target.value)} onBlur={nameErrors} value={last_name} />\r\n                    <p className=\"text-danger\">{errors.name}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                    <input type=\"email\" className=\"form-control\" onChange={e => setEmail(e.target.value)} onBlur={emailErrors} value={email} />\r\n                    <p className=\"text-danger\">{errors.email}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" className=\"form-control\" onChange={e => setPassword(e.target.value)} onBlur={passWErrors} value={password} />\r\n                    <p className=\"text-danger\">{errors.password2}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password:</label>\r\n                    <input type=\"password\" className=\"form-control\" onChange={e => setConPassword(e.target.value)} onBlur={conpassWErrors} value={conpassword} />\r\n                    <p className=\"text-danger\">{errors.conpassword2}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    {\r\n                        first_name.length >= 3 && last_name.length >= 3 && email.length >= 5 && password.length >= 8 && conpassword.length >= 8 ?\r\n                            <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" /> :\r\n                            <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" disabled />\r\n                    }</div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst PersonCard = props => {\r\n    return (\r\n        <div className=\"col-sm-4 mt-5\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-dark text-light\">User Informations</div>\r\n                <div className=\"card-body\">\r\n                    <p>First Name: {props.user.first_name}</p>\r\n                    <p>Last Name: {props.user.last_name}</p>\r\n                    <p>Email: {props.user.email}</p>\r\n                    <p>Password: {props.user.password}</p>\r\n                    <p>Confirm Password: {props.user.conpassword}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default PersonCard;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport PersonForm from './components/PersonForm';\nimport PersonCard from './components/PersonCard';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <PersonForm setUser={setUser} />\n          <div className=\"col-sm-3\"></div>\n          <PersonCard user={user} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}